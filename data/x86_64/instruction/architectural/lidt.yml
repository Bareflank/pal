- name: lidt
  long_name: "Load Interrupt Descriptor Table Register"
  purpose: |
      "
      Loads the values in the source operand into the global descriptor table
      register (GDTR) or the interrupt descriptor table register (IDTR). The
      source operand specifies a 6-byte memory location that contains the base
      address (a linear address) and the limit (size of table in bytes) of the
      global descriptor table (GDT) or the interrupt descriptor table (IDT). If
      operand-size attribute is 32 bits, a 16-bit limit (lower 2 bytes of the
      6-byte data operand) and a 32- bit base address (upper 4 bytes of the
      data operand) are loaded into the register. If the operand-size attribute
      is 16 bits, a 16-bit limit (lower 2 bytes) and a 24-bit base address
      (third, fourth, and fifth byte) are loaded. Here, the high-order byte of
      the operand is not used and the high-order byte of the base address in
      the GDTR or IDTR is filled with zeros. The LGDT and LIDT instructions
      are used only in operating-system software; they are not used in
      application programs. They are the only instructions that directly load a
      linear address (that is, not a segment-relative address) and a limit in
      protected mode. They are commonly executed in real-address mode to allow
      processor initialization prior to switching to protected mode. In 64-bit
      mode, the instruction’s operand size is fixed at 8+2 bytes (an 8-byte
      base and a 2-byte limit). See the summary chart at the beginning of this
      section for encoding data and limits. See “SGDT—Store Global Descriptor
      Table Register” in Chapter 4, Intel® 64 and IA-32 Architectures Software
      Developer’s Manual, Volume 2B, for information on storing the contents of
      the GDTR and IDTR.
      "

  execution_contexts:
      - execution_state: 64bit

        logical_inputs:
            - name: address
              type: uint64
