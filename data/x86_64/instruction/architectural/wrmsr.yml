- name: wrmsr
  long_name: "Write to Model Specific Register"
  purpose: |
      "
      Writes the contents of registers EDX:EAX into the 64-bit model specific
      register (MSR) specified in the ECX register. (On processors that support
      the Intel 64 architecture, the high-order 32 bits of RCX are ignored.)
      The contents of the EDX register are copied to high-order 32 bits of the
      selected MSR and the contents of the EAX register are copied to low-order
      32 bits of the MSR. (On processors that support the Intel 64
      architecture, the high-order 32 bits of each of RAX and RDX are ignored.)
      Undefined or reserved bits in an MSR should be set to values previously
      read. This instruction must be executed at privilege level 0 or in
      real-address mode; otherwise, a general protection exception #GP(0) is
      generated. Specifying a reserved or unimplemented MSR address in ECX will
      also cause a general protection exception. The processor will also
      generate a general protection exception if software attempts to write to
      bits in a reserved MSR. When the WRMSR instruction is used to write to
      an MTRR, the TLBs are invalidated. This includes global entries (see
      “Translation Lookaside Buffers (TLBs)” in Chapter 3 of the Intel® 64 and
      IA-32 Architectures Software Developer’s Manual, Volume 3A). MSRs
      control functions for testability, execution tracing,
      performance-monitoring and machine check errors. Chapter 2,
      “Model-Specific Registers (MSRs)” of the Intel® 64 and IA-32
      Architectures Software Developer’s Manual, Volume 4, lists all MSRs that
      can be written with this instruction and their addresses. Note that each
      processor family has its own set of MSRs. The WRMSR instruction is a
      serializing instruction (see “Serializing Instructions” in Chapter 8 of
      the Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume
      3A). Note that WRMSR to the IA32_TSC_DEADLINE MSR (MSR index 6E0H) and
      the X2APIC MSRs (MSR indices 802H to 83FH) are not serializing. The
      CPUID instruction should be used to determine whether MSRs are supported
      (CPUID.01H:EDX[5] = 1) before using this instruction.
      "

  execution_contexts:
      - execution_state: 64bit

        logical_inputs:
            - name: address
              type: uint32

            - name: value
              type: uint64

        register_operands:
            - name: eax
              input: true

            - name: ecx
              output: true

            - name: edx
              input: true
