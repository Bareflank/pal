- name: rdmsr
  long_name: "Read from Model Specific Register"
  purpose: |
      "
      Reads the contents of a 64-bit model specific register (MSR) specified in
      the ECX register into registers EDX:EAX. (On processors that support the
      Intel 64 architecture, the high-order 32 bits of RCX are ignored.) The
      EDX register is loaded with the high-order 32 bits of the MSR and the EAX
      register is loaded with the low-order 32 bits. (On processors that
      support the Intel 64 architecture, the high-order 32 bits of each of RAX
      and RDX are cleared.) If fewer than 64 bits are implemented in the MSR
      being read, the values returned to EDX:EAX in unimplemented bit locations
      are undefined. This instruction must be executed at privilege level 0 or
      in real-address mode; otherwise, a general protection exception #GP(0)
      will be generated. Specifying a reserved or unimplemented MSR address in
      ECX will also cause a general protection exception. The MSRs control
      functions for testability, execution tracing, performance-monitoring, and
      machine check errors. Chapter 2, “Model-Specific Registers (MSRs)” of the
      Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 4,
      lists all the MSRs that can be read with this instruction and their
      addresses. Note that each processor family has its own set of MSRs. The
      CPUID instruction should be used to determine whether MSRs are supported
      (CPUID.01H:EDX[5] = 1) before using this instruction.
      "

  execution_contexts:
      - execution_state: 64bit

        logical_inputs:
            - name: address
              type: uint32

        logical_outputs:
            - name: value
              type: uint64

        register_operands:
            - name: eax
              output: true

            - name: ecx
              input: true

            - name: edx
              output: true
